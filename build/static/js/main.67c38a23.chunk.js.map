{"version":3,"sources":["ReactDomainFinder/DomainFinder.js","ReactDomainFinder/Domains.js","ReactDomainFinder/Home.js","App.js","serviceWorker.js","index.js"],"names":["DomainFinder","setDomainResults","useContext","DomainContext","useState","error","setError","isLoaded","setIsLoaded","domain","setDomain","pdomain","setPDomain","redirect","setRedirect","useEffect","fetch","then","res","json","response","data","catch","Container","className","to","Jumbotron","style","textAlign","Form","Group","Row","Col","Control","type","onChange","e","target","value","placeholder","required","Button","variant","onClick","preventDefault","Navbar","bg","fixed","Brand","href","Nav","Link","icon","faGithub","faLinkedinIn","faInstagram","faFacebookF","inline","display","placeItems","Spinner","animation","Domains","domainResults","emails","length","ListGroup","Card","Header","textTransform","organization","title","map","email","index","ListGroupItem","key","Body","Title","first_name","last_name","Text","position","tabIndex","role","aria-disabled","React","createContext","Home","DomainFromButton","setDomainFromButton","Provider","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.67c38a23.chunk.js","sourcesContent":["import React,{useState, useEffect, useContext} from 'react'\r\nimport { Container, Form, Button, Row, Col, Jumbotron, Spinner, Navbar, Nav } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n//import { faHeart } from '@fortawesome/free-solid-svg-icons'\r\nimport { faInstagram, faGithub, faFacebookF, faLinkedinIn} from '@fortawesome/free-brands-svg-icons'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { DomainContext } from './Home'\r\n\r\nexport default function DomainFinder() {\r\n\r\n\tconst { setDomainResults } = useContext(DomainContext)\r\n\tconst [error, setError] = useState(null)\r\n\tconst [isLoaded, setIsLoaded]= useState(false)\r\n\tconst [domain, setDomain]= useState(\"\")\r\n\tconst [pdomain, setPDomain]= useState()\r\n\tconst [redirect, setRedirect] = useState(false)\r\n\r\n\tfunction handleClick(e){\r\n\t\te.preventDefault()\r\n\t\tsetIsLoaded(false)\r\n\t\tsetPDomain(domain)\r\n\t}\r\n\r\n\tuseEffect(()=> {\r\n\t\tfetch(`https://api.hunter.io/v2/domain-search?domain=${pdomain}&api_key=2104bd16df84f03b09a2ff3135c37d2ed810e05a`)\r\n\t\t.then(res => res.json())\r\n\t\t.then(response => {\r\n\t\t\tsetDomainResults(response.data)\r\n\t\t\tif(response.data.domain){\r\n\t\t\t\tsetRedirect(true)\r\n\t\t\t}\r\n\t\t\tsetIsLoaded(true)\r\n\t\t}).catch(error => {\r\n\t\t\tsetIsLoaded(true)\r\n\t\t\tsetError(error)\r\n\t\t})\r\n\t},[pdomain, setDomainResults])\r\n\r\n\tif(error){\r\n\t\treturn(   \r\n\t\t\t<div>Error</div>\r\n\t\t)\r\n\t}else if(!isLoaded){\r\n\t\treturn (\r\n\t\t\t<div style={{display: \"grid\", placeItems: \"center\"}}>\r\n\t\t\t\t<Spinner animation=\"grow\" />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}else{\r\n\t\treturn(\r\n\t\t\t<>\r\n\t\t\t\t<Container className=\"py-4\">\r\n\t\t\t\t\t{redirect && <Redirect to='/domains'/>}\r\n\t\t\t\t\t<Jumbotron>\r\n\t\t\t\t\t\t<h1 style={{textAlign: \"center\"}}>Domain Search</h1>\r\n\t\t\t\t\t\t<div className=\"mt-5\">\r\n\t\t\t\t\t\t\t<em>\r\n\t\t\t\t\t\t\t\tThe Domain Search requires a domain name and returns a set of data about the organisation, the email address found and additional information about the people owning those email addresses.\r\n\t\t\t\t\t\t\t</em>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Jumbotron>\r\n\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t<Row className=\"d-flex justify-content-center\">\r\n\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t<Form.Control \r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\t\t\t\tonChange={e =>\r\n\t\t\t\t\t\t\t\t\t\tsetDomain(e.target.value)\r\n\t\t\t\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\t\t\t\tvalue={domain}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter domain...\"\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t<Button type=\"submit\" variant=\"outline-secondary\" onClick={handleClick}>\r\n\t\t\t\t\t\t\t\t\t\tFind...\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t</Form> \r\n\t\t\t\t</Container>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<Navbar bg=\"transparent\" fixed=\"bottom\" variant=\"light\">\r\n\t\t\t\t\t\t<Navbar.Brand href=\"#\">\r\n\t\t\t\t\t\t\t<strong>Niku419</strong>\r\n\t\t\t\t\t\t</Navbar.Brand>\r\n\t\t\t\t\t\t<Nav className=\"mr-auto\">\r\n\t\t\t\t\t\t\t<Nav.Link href=\"https://github.com/niku419\"><FontAwesomeIcon icon={faGithub} /></Nav.Link>\r\n\t\t\t\t\t\t\t<Nav.Link href=\"https://linkedin.com/niku_419\"><FontAwesomeIcon icon={faLinkedinIn} /></Nav.Link>\r\n\t\t\t\t\t\t\t<Nav.Link href=\"https://instagram.com/_niku_419\"><FontAwesomeIcon icon={faInstagram} /></Nav.Link>\r\n\t\t\t\t\t\t\t<Nav.Link href=\"#\"><FontAwesomeIcon icon={faFacebookF} /></Nav.Link>\r\n\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t<Form inline>\r\n\t\t\t\t\t\t\t{/* <Nav className=\"mr-auto\"> \r\n\t\t\t\t\t\t\t\t<Nav.Link>made for Hiku<FontAwesomeIcon color=\"#8d0101\" icon={faHeart} /></Nav.Link>\r\n\t\t\t\t\t\t\t</Nav> */}\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Navbar>\r\n\t\t\t\t</Container>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}","import React, { useContext } from 'react'\r\nimport { Container, Card, ListGroup, ListGroupItem } from 'react-bootstrap'\r\nimport { DomainContext } from './Home'\r\n\r\nexport default function Domains() {\r\n  const { domainResults } = useContext(DomainContext)\r\n\r\n  return (\r\n    <Container className=\"py-4\">\r\n      {domainResults.emails.length> 0 && <>\r\n\t\t\t\t<ListGroup>\r\n\t\t\t\t\t<Card className=\"text-center\" bg=\"dark\" >\r\n\t\t\t\t\t\t<Card.Header >\r\n\t\t\t\t\t\t\t<h3 className=\"text-white\" style={{textTransform: \"uppercase\"}}>{domainResults.organization}</h3>\r\n\t\t\t\t\t\t\t<small className=\"text-muted\">\r\n\t\t\t\t\t\t\t\t<cite title=\"Source Title\">{domainResults.domain}</cite>\r\n\t\t\t\t\t\t\t</small>\r\n\t\t\t\t\t\t</Card.Header>\r\n\t\t\t\t\t\t{domainResults.domain && domainResults.emails.map((email, index) => (\r\n\t\t\t\t\t\t\t<ListGroupItem key={index}>\r\n\t\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t\t<Card.Title>{email.first_name || \" \"} {email.last_name || \" \"}</Card.Title>\r\n\t\t\t\t\t\t\t\t\t<Card.Text>{email.position}</Card.Text>\r\n\t\t\t\t\t\t\t\t\t<footer className=\"blockquote-footer\">\r\n\t\t\t\t\t\t\t\t\t\t<small className=\"text-muted\">\r\n\t\t\t\t\t\t\t\t\t\t\t<cite title=\"Source Title\">{email.value}</cite>\r\n\t\t\t\t\t\t\t\t\t\t</small>\r\n\t\t\t\t\t\t\t\t\t</footer>\r\n\t\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t</ListGroupItem>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</ListGroup>\r\n        <a href=\"/\" className=\"btn btn-secondary py-2\" tabIndex=\"-1\" role=\"button\" aria-disabled=\"true\">\r\n\t\t\t\t\tGo back !!\r\n\t\t\t\t</a>\r\n\t\t\t\t</>\r\n\t\t\t}\r\n    </Container>\r\n  )\r\n}\r\n","import React,{ useState } from 'react'\r\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom'\r\nimport DomainFinder from './DomainFinder'\r\nimport Domains from './Domains'\r\n\r\nexport const DomainContext = React.createContext(null)\r\nexport default function Home() {\r\n  const [domainResults, setDomainResults] = useState({})\r\n  const [DomainFromButton, setDomainFromButton] = useState(\"\")\r\n  return (\r\n    <Router>\r\n      <DomainContext.Provider value={{DomainFromButton, setDomainFromButton, domainResults, setDomainResults}}>\r\n        <Switch>\r\n          <Route exact path='/' component={DomainFinder}/>\r\n          <Route exact path='/domains' component={Domains}/>\t\r\n        </Switch>\r\n      </DomainContext.Provider>\r\n    </Router>\r\n  )\r\n}\r\n","\r\nimport React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport Home from './ReactDomainFinder/Home'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  return (\r\n  <div className=\"app\">\r\n    <Home/>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}